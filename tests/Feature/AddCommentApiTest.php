<?php

namespace Tests\Feature;

use App\Report;
use App\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\Log;
use Tests\TestCase;

class AddCommentApiTest extends TestCase
{
    use RefreshDatabase;
    
    public function setUp(): void
    {
      parent::setUp(); // TODO: Change the autogenerated stub
      
      // テストユーザー作成
      // 1つのUserインスタンスを作成し、これをテストユーザーにする
      $this->user = factory(User::class)->create();
    }
    
    /**
     * @test
     */
    public function _コメントの追加()
    {
      $this->withoutExceptionHandling();
  
      factory(Report::class)->create();
      $report = Report::first();
  
      $comment = 'これはsample comment です';
      Log::debug('投稿用のサンプルコメントを用意します : '.$comment);
  
      $response = $this->actingAs($this->user)
          ->json('POST', route('report.comment', [
              'report_id' => $report->id,
          ]), compact('comment'));
      Log::debug('そしてルーティングの通りにAPIにアクセスします。');

      
      $comments = $report->comments()->get();
      Log::debug('getしたcommentsを変数に入れます : '.$comments);
      Log::debug('response=>assertStatus : '.$response->status());
  
      $response->assertStatus(201)
          ->assertJsonFragment([
              'author' => [
                  'name' => $this->user->name,
              ],
              'comment' => $comment
          ]);
      
      // DBにコメントが1件登録されていること
      $this->assertEquals(1, $comments->count());
      // その内容がAPIによってリクエストしたものであること
      $this->assertEquals($comment, $comments[0]->comment);
      
    }
}
